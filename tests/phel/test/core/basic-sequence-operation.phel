(ns phel\test\core\basic-sequence-operation
  (:require phel\test :refer [deftest is-equals is-nil]))

# -------------------------
# Basic sequence operations
# -------------------------

(deftest test-cons
  (is-equals (php/array 1 2) (cons 1 (php/array 2)) "cons php array")
  (is-equals [1 2] (cons 1 [2]) "cons tuple")
  (is-equals @[1 2] (cons 1 @[2]) "cons array")
  (is-equals @[1] (cons 1 nil) "cons nil"))

(deftest test-first
  (is-equals 1 (first [1]) "first of tuple")
  (is-nil (first []) "first of empty tuple")
  (is-equals 1 (first @[1]) "first of array")
  (is-nil (first @[]) "first of empty array")
  (is-equals 1 (first (php/array 1)) "first of php array")
  (is-nil (first (php/array)) "first of empty php array")
  (is-nil (first nil) "first of nil"))

(deftest test-ffirst
  (is-equals 1 (ffirst [[1]]) "ffirst of nested tuple")
  (is-nil (ffirst [1]) "ffirst of tuple")
  (is-nil (ffirst nil) "ffirst of nil"))

(deftest test-second
  (is-equals 2 (second [1 2]) "second of tuple")
  (is-nil (second []) "second of empty tuple")
  (is-equals 2 (second @[1 2]) "second of array")
  (is-nil (second @[]) "second of empty array")
  (is-equals 2 (second (php/array 1 2)) "second of pgp array")
  (is-nil (second (php/array)) "second of empty php array")
  (is-nil (second nil) "second of nil"))

(deftest test-rest
  (is-equals [2] (rest [1 2]) "rest of two element tuple")
  (is-equals [] (rest [1]) "rest of one element tuple")
  (is-equals [] (rest []) "rest of empty tuple"))

(deftest test-nfirst
  (is-equals [2] (nfirst [[1 2]]) "(nfirst [[1 2]])"))

(deftest test-nnext
  (is-equals [3] (nnext [1 2 3]) "(nnext [1 2 3])"))

(deftest test-count
  (is-equals 0 (count []) "count of empty tuple")
  (is-equals 0 (count nil) "count of nil")
  (is-equals 0 (count @[]) "count of empty array")
  (is-equals 0 (count (php/array)) "count of empty php array")
  (is-equals 0 (count @{}) "count of empty table")
  (is-equals 1 (count ["a"]) "count of one element tuple")
  (is-equals 1 (count @["a"]) "count of one element array")
  (is-equals 1 (count (php/array "a")) "count of one element php array")
  (is-equals 1 (count @{:a 1}) "count of one element table"))
